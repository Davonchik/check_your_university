services:
  database_container:
    container_name: database
    image: postgres:16.3-alpine3.20
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5432:5432"

  application_container:
    container_name: application
    build: .
    env_file:
      - .env   
    restart: on-failure
    depends_on:
      - database_container
    command: sh -c 'sleep 5 && alembic upgrade head &&uvicorn src.main:app --host ${APP_HOST} --port ${APP_PORT}'
    ports:
      - ${APP_PORT}:${APP_PORT}


  notification_container:
    container_name: notification
    build: .
    command: sh -c 'python notifications/kafka.py'
  bot_container:
    container_name: bot
    build: .
    command: sh -c 'python bot/main.py'
  zookeeper:
      image: confluentinc/cp-zookeeper:latest
      container_name: zookeeper
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000
      ports:
        - "2181:2181"
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    restart: always
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
  minio:
    image: minio/minio
    entrypoint: sh
    command: > 
      -c 'mkdir -p /data/test-bucket 
      && minio server /data'         
    ports: 
      - 9000:9000
      - 9001:9001
    environment:                     
      MINIO_ROOT_USER: 'USERNAME'    
      MINIO_ROOT_PASSWORD: 'PASSWORD'
      MINIO_ADDRESS: ':9000'
      MINIO_CONSOLE_ADDRESS: ':9001'

